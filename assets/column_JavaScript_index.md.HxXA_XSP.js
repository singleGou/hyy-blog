import{_ as e,c as r,o as t,ag as i}from"./chunks/framework.CLzmwTRU.js";const f=JSON.parse('{"title":"JavaScript","description":"","frontmatter":{},"headers":[],"relativePath":"column/JavaScript/index.md","filePath":"column/JavaScript/index.md"}'),o={name:"column/JavaScript/index.md"};function n(h,a,l,d,c,s){return t(),r("div",null,a[0]||(a[0]=[i('<h1 id="javascript" tabindex="-1">JavaScript <a class="header-anchor" href="#javascript" aria-label="Permalink to &quot;JavaScript&quot;">​</a></h1><h2 id="数据类型与变量" tabindex="-1">数据类型与变量 <a class="header-anchor" href="#数据类型与变量" aria-label="Permalink to &quot;数据类型与变量&quot;">​</a></h2><h2 id="类型转换" tabindex="-1">类型转换 <a class="header-anchor" href="#类型转换" aria-label="Permalink to &quot;类型转换&quot;">​</a></h2><h2 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;运算符&quot;">​</a></h2><h3 id="基础运算符" tabindex="-1">基础运算符 <a class="header-anchor" href="#基础运算符" aria-label="Permalink to &quot;基础运算符&quot;">​</a></h3><h3 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-label="Permalink to &quot;逻辑运算符&quot;">​</a></h3><h3 id="空值合并运算符" tabindex="-1">空值合并运算符 <a class="header-anchor" href="#空值合并运算符" aria-label="Permalink to &quot;空值合并运算符&quot;">​</a></h3><h2 id="值的比较" tabindex="-1">值的比较 <a class="header-anchor" href="#值的比较" aria-label="Permalink to &quot;值的比较&quot;">​</a></h2><h2 id="基本语句" tabindex="-1">基本语句 <a class="header-anchor" href="#基本语句" aria-label="Permalink to &quot;基本语句&quot;">​</a></h2><h3 id="条件分支-if-和" tabindex="-1">条件分支：if 和 &#39;?&#39; <a class="header-anchor" href="#条件分支-if-和" aria-label="Permalink to &quot;条件分支：if 和 &#39;?&#39;&quot;">​</a></h3>',10)]))}const m=e(o,[["render",n]]);export{f as __pageData,m as default};
